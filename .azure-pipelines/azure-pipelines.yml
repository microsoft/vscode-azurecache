trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - refs/tags/v*

pr:
  branches:
    include:
    - '*'

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-18.04'
    mac:
      imageName: 'macos-10.15'
    windows:
      imageName: 'windows-2019'

pool:
  vmImage: $(imageName)

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- bash: |
    /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    echo ">>> Started xvfb"
  displayName: Start xvfb
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- task: Npm@1
  displayName: 'Install Node packages'
  inputs:
    command: custom
    customCommand: ci

- task: Npm@1
  displayName: 'Build extension'
  inputs:
    command: custom
    customCommand: run compile

- task: Npm@1
  displayName: 'Run linter'
  inputs:
    command: custom
    customCommand: run lint

- task: Npm@1
  displayName: 'Run tests'
  inputs:
    command: custom
    customCommand: run test
  env:
    DISPLAY: ':99.0'

- bash: |
    rm NOTICE.txt
    cp build/NOTICE.txt NOTICE.txt
  displayName: 'Copy build NOTICE to root directory'

- task: Npm@1
  displayName: 'Bundle extension and generate VSIX package'
  inputs:
    command: 'custom'
    customCommand: run package

- task: CopyFiles@2
  displayName: 'Copy VSIX to staging'
  inputs:
    Contents: '**/*.vsix'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish VSIX artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: vsix
  condition: ne(variables['System.PullRequest.IsFork'], 'True')

- task: Npm@1
  displayName: 'Publish extension to marketplace'
  inputs:
    command: custom
    customCommand: run publish
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Agent.OS'], 'Linux'))
  env:
    VSCE_PAT: $(VSCE_PAT)
